plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.10.0"
    id "io.freefair.lombok" version "6.5.0.2"
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
def restAssuredVersion = "5.1.1",
    assertjVersion = "3.23.1",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.36",
    hamcrestVersion = "1.3",
    allureVersion = "2.18.1",
    jacksonVersion = "2.13.3",
    ownerVersion = "1.0.12",
    selenideVersion = "6.6.3"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testImplementation (
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.hamcrest:hamcrest-all:$hamcrestVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.codeborne:selenide:$selenideVersion"
    )

    testRuntimeOnly (
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

allure {
    report {
        version.set("$allureVersion")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("$allureVersion")
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}